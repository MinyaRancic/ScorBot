;File: SCBS.ENG        Ver.1.0.4         24-JUL-2002

[WRITE_COMMAND]
CharProgramPath = CHAR\ENG\WELDING
NumberBegin = D                    
PointMark = DOT
CommaMark = COMMA
DashMark = DASH
ApostropheMark = APOSTR
UnderlineMark = UNDERL
WeldingOutputVariable = WELDING

[MainMenu]
PopupMenuFile     =  &File

;new lang
NewProjMenu       = &New Project$Ctrl+N      // ID_FILE_NEW
OpenProjMenu      = &Open Project...$Ctrl+O  // ID_FILE_OPEN
SaveProjMenu       = &Save Project$Ctrl+S    // ID_FILE_SAVE_PRJ
SaveAsProjMenu   = Save  Project &As...      // ID_FILE_SAVE_AS_PRJ
CloseProjMenu      =  &Close Project         // ID_FILE_CLOSE_PRJ
PrintProgMenu       = &Print Program...      // ID_PROG_PRINT
PrintPositMenu      =  P&rint Positions...   // ID_POS_PRINT
PrintImageMenu     =  Print &3D Image...     // ID_3D_PRINT
PrePrintImageMenu = Print Preview 3&D Image... // ID_3D_PRINT_PREVIEW
PrintChartsMenu     = Print C&harts...         // ID_CHARTS_PRINT
PrePrintChartsMenu=Print Preview Char&ts...    // ID_CHARTS_PRINT_PREVIEW
ImportImageMenu    = &Import 3D Model          // ID_FILE_IMPORT_3D_MODEL
EditImageMenu       = &Edit 3D Model           // ID_FILE_EDIT_3D_MODEL
ViewFileMenu         = View &File               //  ID_FILE_VIEW
;end new lang
ExitMenu            =  E&xit  // ID_APP_EXIT

PopupMenuEdit = &Edit
CutMenu       =  &Cut$Ctrl+X        //  ID_EDIT_CUT
CopyMenu      = C&opy$Ctrl+C     //  ID_EDIT_COPY
PasteMenu     = &Paste$Ctrl+V    //  ID_EDIT_PASTE
FindMenu      =  &Find...$Ctrl+F    //  ID_EDIT_FIND
FindNeMenu  =  &Find &Next$F3   //  ID_EDIT_FIND_NEXT
CmdRemMenu = Command/&Remark (* ...)   //  ID_EDIT_COMMAND_REMARK
GotoLineMenu  = &Go  to  Line...      //  ID_EDIT_GO_TO_LINE
;new lang1
EditLineMenu   = Go to &Selected Line              // ID_EDIT_EDIT_LINE

PopupMenuRun = &Run
SearchHomeMenu = Search Home - &All Axes   //  IDM_HOMING_ALL
SearchHomeRobMenu = Search Home - &Robot   //  IDM_HOMING_ROBOT
SearchHomePerMenu = Search Home - P&eripherals //  IDM_HOMING_PERIPH
RunSingLineMenu = Run Single &Line$F6          //  IDM_RUN_SINGLE_LINE
RunSingCycleMenu = Run Single &Cycle$F7      //  IDM_RUN_SINGLE_CYCLE
RunContinMenu = Run C&ontinuously$F8         //  IDM_RUN_CONTINUOUSLY
GoHomeAllMenu = &Go Home - All Axes     //  IDM_GO_HOME
GoHomeRobMenu = Go &Home - Robot             //  IDM_GO_HOME_ROB
GoHomePerMenu = Go Ho&me - Peripherals       //  IDM_GO_HOME_PERIPH
PauseMenu =  &Pause$F10                       //  IDM_PAUSE
StopMenu  =  &Stop$F9                             //  IDM_STOP

PopupMenuOptions = &Options
OnLineMenu = O&n - Line     // IDM_ONLINE
OffLineMenu = O&ff - Line   // IDM_OFFLINE
SimulMenu = &Simulation     // IDM_SIMULATION
ConMenu   = &Control On$F5  // IDM_CON
CoffMenu  = Control &Off    // IDM_COFF

;new lang
SetupMenu = &Hardware Setup     // IDM_PERIPH
SetParamMenu = S&et Parameters  // IDM_SET_PARAM
;end new lang

LineNumMenu = &Line Number     // IDM_LINE_NUMBER

;new lang
StartUpProjMenu    = &Reload Last Project at Startup    // IDM_STARTUP_PROJ
Level1Menu = Level &1                // IDM_L1
Level2Menu = Level &2                // IDM_L2
ProMenu     = &Pro                    // IDM_PRO
AdvancedMenu =   &Advanced Options...  // IDM_ADV_OPTIONS
;end new lang

PopupMenuView  = &View

;new lang1
WorkspaceMenu  = &Workspace                //  ID_VIEW_PROJ

ManMoveMenu     = &Manual Movement         //  ID_VIEW_MMOVE
TeachPositMenu  =  &Teach Positions        //  ID_VIEW_TEACH_POS

;new lang
RobotMoveMenu  =  &Robot Movement          //  ID_VIEW_IMAGE
ListPositMenu     =  &Positions       //  ID_VIEW_POS
ShowChartMenu =   &Charts                   // IDM_SHOW_CHART
ShowAllMenu     =   &Show All Dialog Bars   // ID_VIEW_SHOW_ALL 
CloseAllMenu     =   Close &All Dialog Bars  // ID_VIEW_CLOSE_ALL
MotionInfoMenu  =   Movement &Information   //  IDM_TRACKING_ERROR
MessagesMenu  =   M&essages                 //  ID_VIEW_MESS
ToolbarMenu      =   T&oolbar               // ID_VIEW_TOOLBAR
StatusBarMenu   =   Status &Bar             // ID_VIEW_STATUS_BAR

PopupMenuDialogBars = &Dialog Bars 
JointsMenu = &Joints           // ID_VIEW_JNT
;end new lang

XYZMenu = &XYZ                 //  ID_VIEW_XYZ

;new lang
DigOutMenu = Digital &Outputs  // ID_VIEW_DOUT
DigInpMenu  =  Digital &Inputs //  ID_VIEW_DIN
AnalOutMenu  = &Analog Outputs // ID_VIEW_DOUT
AnalInpMenu =  A&nalog Inputs  //  ID_VIEW_DIN
;end new lang

EncodersMenu  =  &Encoder Counts     // ID_VIEW_ENC

;new lang
PopupMenuImage =  &3D Image      
ResetModelMenu  = &Reset Workcell // ID_3D_RESET
TopViewMenu = &Top View           // ID_CAMERA_TOP
DragImageMenu    =  &Drag Image   // ID_MOVE_SCENE
ShowPathMenu = S&how Robot Path         // ID_SHOW_PATH
ClearPathMenu =    Clear Robot Pat&h     // ID_CLEAR_PATH
SceneOriginMenu = Show &Origin     // ID_SHOW_XYZ_REL_ROB
RobotWorkspaceMenu = Show Robot Work &Envelope   // ID_SHOW_XYZ_REL_ROB
WeldSettingMenu =  &Welding Settings   // ID_WELD_SETTING

PopupMenuCamera = &Camera
;end new lang

RedirectCamMenu = &Redirect Camera    // ID_REDIRECT_CAMERA
FollowMeCamMenu = &Follow Me Camera  // ID_FOLLOWME_CAMERA
SaveCamPositMenu =  &Save Camera Position  // ID_SAVE_CAMERA_POS

;new lang1
RestoreCamPositMenu =  &Load Camera Position  // ID_DEF_VIEW

PopupMenuLabels = &Labels
ObjectNamesMenu = Object &Names  // ID_SHOW_NAME
ObjectPositMenu = Object &Positions   // ID_SHOW_XYZ
ObjectPositRelRobMenu = &Object Positions in Robot Coordinates  // ID_SHOW_XYZ_REL_ROB
PartsInFeederMenu  = &Number of Parts in Feeder // ID_SHOW_NUM_PARTS_IN_FEEDER

;new lang1
PopupMenuSendRob = &Send Robot

ToObjectMenu = Send Robot to &Object             // IDM_SEND_OBJECT
ToPointMenu = Send Robot to &Point                 //  IDM_SEND_POINT
AbovePointMenu = Send Robot &Above Point  // IDM_SEND_ABOVE_POINT

;new lang1
OptionsToSendMenu = S&end Robot Settings // IDM_SEND_OPTIONS

;new lang1
PopupMenuWindow = &Window
SimulTeachScrMenu = &Simulation && Teach   // IDM_SIMUL_AND_TEACH

;new lang1
TeachScrMenu   =  &Teach && Edit    // IDM_TEACH

RunScrMenu      =  &Run Screen      // IDM_RUN_SCREEN

;new lang1
ProjectScrMenu  = &Project Screen   // IDM_PROJECT_SCREEN

UserScrMenu   =   &User Screen      // IDM_USER_SCREEN
SaveUserScrMenu   =  S&ave User Screen  // IDM_SAVE_USER_SCREEN

PopupMenuHelp =  &Help
AboutMenu =      &About...  // ID_APP_ABOUT

;new lang
RegistrationMenu   =  Re&gistration...   // IDM_REGISTRATION
RobocellHelpMenu  = &RoboCell Help  F1   // IDM_HELP
ScorbaseHelpMenu = &SCORBASE Help
ScorbaseHelpF1Menu = &SCORBASE Help  F1 
;end new lang

[ProgramViewPopupMenu]
Copy = &Copy             // ID_EDIT_COPY
Find = &Find             // ID_EDIT_FIND
FindNext = Find &Next    // ID_EDIT_FIND_NEXT
GotoLine = &Go to Line   // ID_EDIT_GO_TO_LINE
Cut = C&ut               // ID_EDIT_CUT 
Paste = &Paste           // ID_EDIT_PASTE
CommandRemark = Command/&Remark // ID_EDIT_COMMAND_REMARK

[PositViewPopupMenu]
;new lang
PositionNumber = &Position #
Delete = &Delete            // ID_POS_VIEW_DEL
DeleteAll = Delete &All     // ID_POS_VIEW_DEL_ALL
AddWatch = Add &Watch       // ID_POS_VIEW_ADD_WATCH
Remove = &Remove            // ID_POS_VIEW_REMOVE_WATCH
RemoveAll = Re&move All     // ID_POS_VIEW_CLEAR_WATCH
ShowJoint = Show &Joint     // ID_POS_VIEW_JOINT
ShowXYZ = Show &XYZ         // ID_POS_VIEW_XYZ
ShowBoth = Show &Both       // ID_POS_VIEW_JOINT_XYZ
;end new lang

[MessagesPopupMenu]
;new lang
DeleteAll = Delete &All     // ID_DEL_ALL_MESS
Delete = Delete &Selection  // ID_DEL_MESS
;end new lang

;    Shimon2
[ChartsViewPopupMenu]
AxisNumber = Axis #%d
DefaultZoom = &Default Zoom Level
BackZoomLevel = &Back One Zoom Level

[DialogBars]
;new lang
EncCounts = Encoder Counts:
AnalOuts  = Analog Outputs:
AnalInps  = Analog Inputs:
DigOuts   = Digital Outputs:
DigInps   = Digital Inputs:
Joints    = Joints (deg):
XYZ       = XYZ:

X =  X(mm):     // IDS_X
Y =  Y(mm):     // IDS_Y
Z =  Z(mm):     // IDS_Z
P = P(deg):    // IDS_P
R =  R(deg):    // IDS_R

Base = Base:         // IDS_BASE
Shoulder = Shoulder: // IDS_SHOULDER
Elbow = Elbow:       // IDS_ELBOW
Pitch = Pitch:       // IDS_PITCH
Roll = Roll:         // IDS_ROLL

InputNum = INPUT%d
OutputNum = OUTPUT%d
Rename = &Rename
On    =  &On
Off =    O&ff
Force =  For&ce
SetValue = &Set Value


[HintText]
MiniNew = New
New =  Create a new project // ID_FILE_NEW

MiniOpen = Open
Open = Open an existing project   // ID_FILE_OPEN

MiniSave = Save
Save = Save the currently active project  // ID_FILE_SAVE_PRJ

MiniSaveAs = Save As
SaveAs = Save the currently active project with a new name  // ID_FILE_SAVE_AS_PRJ

MiniClose = Close Project
Close = Close the currently active project   // ID_FILE_CLOSE_PRJ

MiniPrintProg = Print the Program
PrintProg = Print the SCORBASE Program file for the currently active project // ID_PROG_PRINT

MiniPrintPosit = Print the Positions
PrintPosit = Print the Positions file for the currently active project // ID_POS_PRINT

MiniPrintImage = Print the 3D Image
PrintImage = Print the workcell for the currently active project  // ID_3D_PRINT

MiniPrePrintImage = Print Preview 3D Image
PrePrintImage = Preview how the workcell will look on the printed page // ID_3D_PRINT_PREVIEW

MiniPrintCharts = Print the Charts
PrintCharts  = Print the project charts for the currently active project // ID_CHARTS_PRINT

MiniPrePrintCharts = Print Preview the Charts
PrePrintCharts = Preview how the project charts will look on the printed page  // ID_CHARTS_PRINT_PREVIEW

MiniImportImage = Import 3D Model
ImportImage     = Import a new workcell into the currently active project // ID_FILE_IMPORT_3D_MODEL

MiniEditImage  = Edit 3D Model
EditImage      = Edit the workcell currently active in the project  // ID_FILE_EDIT_3D_MODEL

MiniViewFile  = View File
ViewFile      = View a Position, Program or 3D Image file without importing it into the currently active project  // ID_FILE_VIEW

MiniExit      =  Exit
Exit          = Quit the application; prompts to save the currently active project // ID_APP_EXIT

MiniCut   =  Cut
Cut    =  Cut out the selection and put it on the clipboard  //  ID_EDIT_CUT

MiniCopy  = Copy         
Copy      = Copy the selection and put it on the clipboard   //  ID_EDIT_COPY

MiniPaste = Paste
Paste     = Paste the contents of the clipboard at the cursor position  //  ID_EDIT_PASTE

MiniFind  = Find
Find      = Find the specified text  //  ID_EDIT_FIND

MiniFindNe  = Find Next
FindNe  =  Find the next instance of the specified text  //  ID_EDIT_FIND_NEXT

MiniCmdRem = Command/Remark
CmdRem     = Toggle the selected lines between Command and Remark status   // ID_EDIT_COMMAND_REMARK

MiniGotoLine = Go to Line 
GotoLine  =   Go to the specified line in the program   // ID_EDIT_GO_TO_LINE

MiniEditLine = Go to Selected Line
EditLine   = Go to the currently selected line in the program  // ID_EDIT_EDIT_LINE

MiniSearchHome = Search Home - All Axes
SearchHome = Execute the Homing program for the robot and peripheral devices // IDM_HOMING_ALL

MiniSearchHomeRob = Search Home - Robot
SearchHomeRob = Execute the Homing program for the robot   //  IDM_HOMING_ROBOT

MiniSearchHomePer = Search Home - Peripherals
SearchHomePer = Execute the Homing program for the peripheral devices // IDM_HOMING_PERIPH

MiniRunSingLine = Run Single Line
RunSingLine = Run the currently selected line of the SCORBASE program  // IDM_RUN_SINGLE_LINE

MiniRunSingCycle = Run Single Cycle
RunSingCycle = Run a single cycle of the SCORBASE program from the currently selected line  //  IDM_RUN_SINGLE_CYCLE

MiniRunContin = Run Continuously
RunContin = Run the SCORBASE program continuously from the currently selected line //  IDM_RUN_CONTINUOUSLY

MiniGoHomeAll = Go Home - All Axes
GoHomeAll = Send the robot and the peripheral devices to their home positions // IDM_GO_HOME AF

MiniGoHomeRob = Go Home - Robot
GoHomeRob = Send the robot to its home position // IDM_GO_HOME_ROB

MiniGoHomePer = Go Home - Peripherals
GoHomePer = Send the peripheral devices to their home positions  // IDM_GO_HOME_PERIPH

MiniPause = Pause                      
Pause = Pause the running of the SCORBASE program after the currently selected line has been executed //  IDM_PAUSE

MiniStop  =  Stop
Stop  =  Immediately stop the execution of the SCORBASE program // IDM_STOP

MiniOnLine = On-line  
OnLine =  Initialize on-line working mode // IDM_ONLINE

MiniOffLine = Off-line 
OffLine = Initialize off-line working mode // IDM_OFFLINE

MiniSimul = Simulation   
Simul = Initialize simulation working mode // IDM_SIMULATION

MiniCon = Control On
Con = Immediately execute the Control On command, enabling control of the axes and I/O devices // IDM_CON

MiniCoff = Control Off
Coff =  Immediately execute the Control Off command, disabling control of the axes and the I/O devices  // IDM_COFF

MiniSetup = Hardware Setup
Setup = Define the hardware (robot and peripheral devices) setup for the currently active project  // IDM_PERIPH

MiniSetParam = Set Parameters
SetParam = View project parameters   // IDM_SET_PARAM

MiniLineNum = Show Line Numbers
LineNum = Toggle the display of the line numbers in the Program window // IDM_LINE_NUMBER

MiniStartUpProj = Reload at Startup
StartUpProj = Enable the automatic reloading of the last active project at startup // IDM_STARTUP_PROJ

MiniLevel1 =  Introductory
Level1 = Enable use of basic commands // IDM_L1

MiniLevel2 = Advanced
Level2 = Enable use of advanced commands // IDM_L2

MiniPro = Professional
Pro = Enable use of all commands // IDM_PRO

MiniAdvanced = Advanced Options
Advanced = Display advanced programming options // IDM_ADV_OPTIONS

MiniWorkspace = Workspace Window
Workspace = Toggle the display of the Workspace window  // ID_VIEW_PROJ

MiniManMove =  Manual Movement Dialog Box
ManMove = Toggle the display of the Manual Movement dialog box  // ID_VIEW_MMOVE

MiniTeachPosit =  Teach Positions Dialog Box
TeachPosit = Toggle the display of the Teach Positions dialog box // ID_VIEW_TEACH_POS

MiniRobotMove = Robot Movement Window
RobotMove = Toggle the display of the Robot Movement window  // ID_VIEW_IMAGE

MiniListPosit = Positions Window
ListPosit = Toggle the display of the Positions window // ID_VIEW_POS

MiniShowChart = Charts Window
ShowChart = Toggle the display of the Charts window // IDM_SHOW_CHART

MiniShowAll = Show All Dialog Bars
ShowAll =    Show all the dialog bars  // ID_VIEW_SHOW_ALL

MiniCloseAll = Close All Dialog Bars
CloseAll =     Close all the dialog Bars // ID_VIEW_CLOSE_ALL

MiniMotionInfo = Movement Information Window
MotionInfo =   Toggle the display of the Movement Information window // IDM_TRACKING_ERROR

MiniMessages = Messages Window
Messages =     Toggle the display of the Messages window // ID_VIEW_MESS

MiniToolbar =  ToolBar
Toolbar =      Toggle the display of the toolbar in the currently active window // ID_VIEW_TOOLBAR

MiniStatusBar =   Status Bar
StatusBar =   Toggle the display of the status bar in the currently active window // ID_VIEW_STATUS_BAR

MiniJoints = Joints Dialog Bar
Joints = Toggle the display of the Joints dialog bar // ID_VIEW_JNT

MiniXYZ = XYZ Dialog Bar
XYZ = Toggle the display of the XYZ dialog bar // ID_VIEW_XYZ

MiniDigOut = Digital Outputs Dialog Bar
DigOut =     Toggle the display of the Digital Outputs dialog bar  // ID_VIEW_DOUT

MiniDigInp =  Digital Inputs Dialog Bar
DigInp = Toggle the display of the Digital Inputs dialog bar // ID_VIEW_DIN

MiniAnalOut = Analog Outputs Dialog Bar
AnalOut = Toggle the display of the Analog Outputs dialog bar // ID_VIEW_AOUT

MiniAnalInp = Analog Inputs Dialog Bar
AnalInp = Toggle the display of the Analog Inputs dialog bar // ID_VIEW_AIN

MiniEncoders = Encoder Counts Dialog Bar
Encoders = Toggle the display of the Encoder Counts dialog bar  // ID_VIEW_ENC

MiniResetModel = Reset Workcell
ResetModel = Reset the workcell // ID_3D_RESET

MiniTopView = Top View
TopView = Redirect the camera to display an overhead view of the workcell, focused at the center of the image  // ID_CAMERA_TOP

MiniDragImage = Drag Image
DragImage = Drag the 3D image within the workcell // ID_MOVE_SCENE

MiniShowPath = Show Robot Path
ShowPath = Toggle the display of the robot path // ID_SHOW_PATH

MiniClearPath = Clear Robot Path
ClearPath = Clear the robot path  // ID_CLEAR_PATH

MiniSceneOrigin = Show Cell Origin
SceneOrigin = Show the origin of the workcell // ID_SCENE_ORIGIN

MiniRobotWorkspace = Show Robot Work Envelope
RobotWorkspace = Show the robot's work envelope // ID_SHOW_XYZ_REL_ROB

MiniWeldSetting =  Welding Settings 
WeldSetting =  Define the welding settings // ID_WELD_SETTING

MiniRedirectCam = Redirect Camera
RedirectCam = Redirect the camera to an object selected in the 3D Image window // ID_REDIRECT_CAMERA

MiniFollowMeCam = Follow Me Camera
FollowMeCam = Redirect the camera to follow an object selected in the 3D Image window // ID_FOLLOWME_CAMERA

MiniSaveCamPosit = Save Camera Position
SaveCamPosit = Save the current position of the camera, overwriting previously saved positions // ID_SAVE_CAMERA_POS

MiniRestoreCamPosit = Load Camera Position
RestoreCamPosit = Reset the camera to the saved camera position // ID_DEF_VIEW

MiniObjectNames = Show Object Names
ObjectNames = Show the names of the objects in the workcell // ID_SHOW_NAME

MiniObjectPosit = Show Object Positions
ObjectPosit = Show the positions of the objects in the workcell // ID_SHOW_XYZ

MiniObjectPositRelRob = Positions in Robot Coordinates
ObjectPositRelRob = Show the positions of the objects in the workcell in robot coordinates // ID_SHOW_XYZ_REL_ROB

MiniPartsInFeeder = Number of Parts in Feeder
PartsInFeeder = Indicate the number of parts in the feeder // ID_SHOW_NUM_PARTS_IN_FEEDER

MiniToObject = Send Robot to Object
ToObject =  Send the robot to an object selected in the workcell // IDM_SEND_OBJECT

MiniToPoint = Send Robot to Point
ToPoint = Send the robot to a point selected in the workcell   // IDM_SEND_POINT

MiniAbovePoint = Send Robot Above Point
AbovePoint = Send the robot to a set distance above a point selected in the workcell  // IDM_SEND_ABOVE_POINT

MiniOptionsToSend = Send Robot Settings
OptionsToSend = Define the settings for the Send Robot commands  // IDM_SEND_OPTIONS

MiniSimulTeachScr = Simulation & Teach Mode
SimulTeachScr = Activate Simulation & Teach mode to record positions and run programs // IDM_SIMUL_AND_TEACH

MiniTeachScr = Teach & Edit Mode
TeachScr = Activate Teach & Edit mode to write SCORBASE programs // IDM_TEACH

MiniRunScr = Run Screen Mode
RunScr = Activate Run Screen mode to run programs // IDM_RUN_SCREEN

MiniProjectScr = Project Screen Mode
ProjectScr = Activate Project Screen mode to view robot positions and run programs // IDM_PROJECT_SCREEN

MiniUserScr = User Screen
UserScr = Load the currently saved User Screen // IDM_USER_SCREEN

MiniSaveUserScr = Save User Screen
SaveUserScr = Save the current window layout as the User Screen // IDM_SAVE_USER_SCREEN

MiniAbout = About
About = Display program information, version number and copyright // ID_APP_ABOUT

MiniRegistration =  Registration
Registration = Registration information  // IDM_REGISTRATION

MiniRobocellHelp = Robocell Help
RobocellHelp = Robocell Help  // IDM_HELP

MiniScorbaseHelp = SCORBASE Help
ScorbaseHelp = SCORBASE Help  // IDM_HELP_SCORBASE

SkipHomeCmdHint = Skip the Search Home command for robot and peripherals  // CM_SKIPHOMECMD

; Teach Dialog
RecPos =  Record Position
DelPos =  Delete Position

; ProgramViewPopupMenu
MiniOpenGrip =  Open Gripper
OpenGrip =   Open the gripper // IDM_OP_GR

MiniCloseGrip =  Close Gripper
CloseGrip =  Close the gripper // IDM_CL_GR

MiniGoToPos = Go to Position
GoToPos = Go to the selected position  // IDM_GO_POS

MiniGoLinToPos = Go Linear to Position
GoLinToPos = Go to the selected position in a straight line  // IDM_GO_POS_LIN

MiniGoCircToPos = Go Circular to Position
GoCircToPos = Go to the selected position via another position //  IDM_GO_POS_CYR

MiniGoSplToPos = Go Spline to Position
GoSplToPos = Go spline to the selected position  //  IDM_GO_POS_SPLINE

MiniIfJump = If <condition> Jump ...
IfJump =     Jump to the specified label if the condition is met // IDM_IF_JUMP

MiniIfInp = If Input ...
IfInp =  Perform the specified action if the specified input is ON/OFF // IDM_IF_INPUT

MiniOnInpInt = On Input Interrupt ...
OnInpInt =    Call the specified subroutine if the specified input is ON/OFF // IDM_ON_INPUT_INT

MiniTurnOnOut =  Turn Output On
TurnOnOut =  Turn on a selected output // IDM_OUTPUT_ON

MiniTurnOffOut =   Turn Output Off
TurnOffOut =   Turn off a selected output // IDM_OUTPUT_OFF

MiniSetVarToComput =  Set Variable
SetVarToComput =  Set a variable for a specified value or expression //  IDM_SET_VAR_TO_COMP

; PositViewPopupMenu
PositionNumber = Position number
Delete = Delete the selected position  // ID_POS_VIEW_DEL
DeleteAll = Delete all the positions   // ID_POS_VIEW_DEL_ALL
AddWatch = Add the selected position to the Watch Pane   // ID_POS_VIEW_ADD_WATCH
Remove = Remove the selected position from the watch Pane // ID_POS_VIEW_REMOVE_WATCH
RemoveAll = Remove all the positions from the Watch Pane  // ID_POS_VIEW_CLEAR_WATCH
ShowJoint = Show only Joint values in the Positions window  // ID_POS_VIEW_JOINT
ShowXYZ = Show only XYZ values in the Positions window // ID_POS_VIEW_XYZ
ShowBoth = Show both Joint and XYZ values in the Positions window  // ID_POS_VIEW_JOINT_XYZ

; Charts
MiniStartChart = Start Chart
StartChart = Start recording encoder information and generating the chart // IDM_CHARTS_RUN

MiniStopChart = Stop Chart
StopChart = Stop recording encoder information and generating the chart // IDM_CHARTS_STOP

MiniOptions =  Options
Options =  Define chart options // IDM_CHARTS_PROP

MiniHistory = History
History = Open the history file // IDM_CHARTS_OPEN_HIS

MiniLegend =  Legend
Legend =  Display the chart legend  // IDM_LEGEND

; Messages
DeleteAllMes = Delete all the messages     // ID_DEL_ALL_MESS
DeleteMes = Delete the selected messages   // ID_DEL_MESS

; Parameter Set
MiniOpenParSet = Open...  // IDM_PAR_OPEN
MiniSaveParSet = Save     // IDM_PAR_SAVE
MiniSaveParSetAs = Save As...   // IDM_PAR_SAVE_AS
MiniOpenDefaultParSet = Open Default // IDM_PAR_DEF
MiniApplyParSet       = Apply        // IDM_PAR_APPLY
MiniViewFileStruct    = View         // IDM_PAR_VIEW
;end new lang


[CommandsDialog]
Caption = Command List

RobotMoveCmd = AXIS CONTROL      // IDS_RM
InpOutCmd =    INPUTS & OUTPUTS  // IDS_IO
ProgramFlow =  PROGRAM FLOW      // IDS_PF

;new lang
AdvancedCmd =  ADVANCED COMMANDS // IDS_AC
VisionCmd = VISION COMMANDS      // IDS_VF
;end new lang

;  Comment:  XXXXXXBrief = <BriefName>,<Two letter hot key>
;  Comment:  XXXXXXShow  = Don't alter |1 or |2 or |3 items

OpenGripperBrief = OpenGripper,OG
OpenGripperShow =  Open Gripper      // IDS_OPENGRIPPER

CloseGripperBrief = CloseGripper,CG
CloseGripperShow =  Close Gripper     // IDS_CLOSEGRIPPER

GoToPosition#_FastBrief = GoToPosition#_Fast,GP
GoToPosition#_FastShow = Go to Position |1 Fast  // IDS_GOTOPOSITIONFAST

GoToPosition#_SpeedBrief = GoToPosition#_Speed,GP
GoToPosition#_SpeedShow =  Go to Position |1 Speed |2 // IDS_GOTOPOSITIONSPEED

GoToPosition#_TimeBrief = GoToPosition#_Time,GP
GoToPosition#_TimeShow =  Go to Position |1 Duration |2 (1/10 sec.) // IDS_GOTOPOSITIONTIME

GoLinearToPosition#_FastBrief = GoLinearToPosition#_Fast,GL
GoLinearToPosition#_FastShow =  Go Linear to Position |1 Fast  // IDS_GOLINEARTOPOSITIONFAST

GoLinearToPosition#_SpeedBrief = GoLinearToPosition#_Speed,GL
GoLinearToPosition#_SpeedShow =  Go Linear to Position |1 Speed |2 // IDS_GOTOPOSITIONSPEED

GoLinearToPosition#_TimeBrief = GoLinearToPosition#_Time,GL
GoLinearToPosition#_TimeShow =  Go Linear to Position |1 Duration |2 (1/10 sec.) // IDS_GOTOPOSITIONTIME

GoCircularToPosition#_FastBrief = GoCircularToPosition#_Fast,GC
GoCircularToPosition#_FastShow = Go Circular to Position |1 through |2 Fast // IDS_GOCIRCULARTOPOSITIONFAST

GoCircularToPosition#_SpeedBrief = GoCircularToPosition#_Speed,GC
GoCircularToPosition#_SpeedShow =  Go Circular to Position |1 through |2 Speed |3 // IDS_GOCIRCULARTOPOSITIONSPEED

GoCircularToPosition#_TimeBrief = GoCircularToPosition#_Time,GC
GoCircularToPosition#_TimeShow =  Go Circular to Position |1 through |2 Duration |3 (1/10 sec.)// IDS_GOCIRCULARTOPOSITIONTIME

GoSplineToPosition#_FastBrief  = GoSplineToPosition#_Fast,GS
GoSplineToPosition#_FastShow =  Go Spline to Position |1  from |2 Fast  // IDS_GOSPLINETOPOSITIONFAST

GoSplineToPosition#_SpeedBrief = GoSplineToPosition#_Speed,GS
GoSplineToPosition#_SpeedShow =  Go Spline to Position |1 from |2 Speed |3 // IDS_GOSPLINETOPOSITIONSPEED

GoSplineToPosition#_TimeBrief = GoSplineToPosition#_Time,GS
GoSplineToPosition#_TimeShow =  Go Spline to Position |1 from |2 Duration |3  (1/10 sec.) //IDS_GOSPLINETOPOSITIONTIME

JawBrief = Jaw,JA
JawShow =  Jaw  |1 ( mm )   // IDS_JAW

IfLimitSwitch#_Brief = IfLimitSwitch#_,IL
IfLimitSwitch#_Show = If Limit Switch |1 on Jump to |2  // IDS_IFLIMITSWITCH

RecordPosition#_Brief = RecordPosition#_,RP
RecordPosition#_Show = Record Present Position as Position |1 ! // IDS_SEARCHHOME

SearchHomeBrief = SearchHome,SH
SearchHomeShow = Search Home   // IDS_SEARCHHOME

SetAxis#_ToZeroBrief = SetAxis#_ToZero,SA
SetAxis#_ToZeroShow =  Set Axis |1 to Zero     // IDS_SETAXIS

SetHomePositionBrief = SetHomePosition,PH
SetHomePositionShow =  Set Present Position as Home ! // IDS_SETPOSITIONASHOME

ControlOnBrief = ControlOn,CN
ControlOnShow = Control On    // IDS_CONTROLON

ControlOffBrief = ControlOff,CF
ControlOffShow =  Control Off  // IDS_CONTROLOFF

StartConveyorBrief = StartConveyor,SC
;new lang1
StartConveyorShow = Start Conveyor Axis |1 at Speed |2 in |3 Direction // IDS_STARTCONVEYOR

StopConveyorBrief = StopConveyor,ST
;new lang1
StopConveyorShow =  STop Conveyor Axis |1  // IDS_STOPCONVEYOR

;new lang
SetVariableToSensorBrief = SetVariableToGripperSensor,SG
SetVariableToSensorShow =  Set Variable |1 to Gripper Sensor // IDS_SETVARIABLETOSENSOR
;end new lang

WriteBrief = Write,WR
WriteShow =  Write: "|1", Scale |2   // IDS_WRITE

;new lang
UseParameterSetBrief = UseParameterSet,UP                       
UseParameterSetShow =  Use Parameter Set |1

SetParameterValueBrief = SetParameterValue,PV
SetParameterValueShow = Set Parameter |1 [|2] = |3
;end new lang

IfInput#_OnJumpBrief = IfInput#_OnJump,II
IfInput#_OnJumpShow =  If Input |1 On Jump to |2    // IDS_IFINPUTONJUMP

IfInput#_OffJumpBrief = IfInput#_OffJump,II
IfInput#_OffJumpShow = If Input |1 Off Jump to |2   // IDS_IFINPUTOFFJUMP

IfInput#_OnSubBrief = IfInput#_OnSub,II
;new lang1
IfInput#_OnSubShow =  If Input |1 On Call Subroutine |2       //  IDS_IFINPUTONSUB

IfInput#_OffSubBrief = IfInput#_OffSub,II
;new lang1
IfInput#_OffSubShow =  If Input |1 Off Call Subroutine |2       // IDS_IFINPUTOFFSUB

OnInputInt#_OnJumpBrief = OnInputInt#_OnJump,OI
OnInputInt#_OnJumpShow =  On Input Interrupt |1 On Jump to |2 // IDS_ONINPUTINTONJUMP

OnInputInt#_OffJumpBrief = OnInputInt#_OffJump,OI
OnInputInt#_OffJumpShow =  On Input Interrupt |1  Off Jump to |2 // IDS_ONINPUTINTOFFSUB

OnInputInt#_OnSubBrief = OnInputInt#_OnSub,OI
;new lang1
OnInputInt#_OnSubShow =   On Input Interrupt |1 On Call Subroutine |2 // IDS_ONINPUTINTONSUB

OnInputInt#_OffSubBrief = OnInputInt#_OffSub,OI
;new lang1
OnInputInt#_OffSubShow =  On Input Interrupt |1 Off Call Subroutine |2 // IDS_ONINPUTINTOFFSUB

DisableInterrupt#_Brief = DisableInterrupt#_,DI
DisableInterrupt#_Show =  Disable Input Interrupt |1  // IDS_DISABLEINTERRUPT

EnableInterrupt#_Brief = EnableInterrupt#_,EI
EnableInterrupt#_Show =  Enable Input Interrupt |1  // IDS_ENABLEINTERRUPT

TurnOnOutput#_Brief = TurnOnOutput#_,ON
TurnOnOutput#_Show =  Turn On Output |1  // IDS_TURNONOUTPUT

TurnOffOutput#_Brief = TurnOffOutput#_,OF
TurnOffOutput#_Show =  Turn Off Output |1  // IDS_TURNOFFOUTPUT

SetAnalogOutput#_Brief = SetAnalogOutput#_,AO
SetAnalogOutput#_Show = Set Analog Output |1  to |2  // IDS_SETANALOGOUTPUT

SetVariableToAnalogInput#_Brief = SetVariableToAnalogInput#_,AI
SetVariableToAnalogInput#_Show =  Set Variable |1 to Analog Input |2  // IDS_SETVARIABLETOANALOGINPUT

WaitBrief = Wait,WT
WaitShow =  Wait |1 (10ths of seconds)   // IDS_WAIT

JumpToBrief = JumpTo,JU
JumpToShow =  Jump to |1 // IDS_JUMPTO

RemarkBrief = Remark,RE
RemarkShow =  Remark: |1  // IDS_REMARK

PrintToScreenBrief = PrintToScreen,PR
PrintToScreenShow = Print to Screen: |1 // IDS_PRINT_SCR

PrintToLogBrief = PrintToLog,PL
PrintToLogShow = Print to Log File: |1  // IDS_PRINT_LOG

PrintToScreenLogBrief = PrintToScreenLog,PS
PrintToScreenLogShow =  Print to Screen & Log: |1 // IDS_PRINT_SCR_LOG

RingBellBrief = RingBell,RB
RingBellShow =  Ring Bell  // IDS_RINGBELL

ResetTimerBrief = ResetTimer,RT
ResetTimerShow = Reset Timer     // IDS_RESETTIMER

SetVariableToComputationBrief = SetVariableToComputation,SV
SetVariableToComputationShow = Set Variable |1  = |2   // IDS_SETVARIABLE

SetVariableToTimerBrief = SetVariableToTimer,SV 
SetVariableToTimerShow = Set Variable |1 to Timer  // IDS_SETVARIABLETOTIMER

IfJumpBrief = IfJump,If
IfJumpShow = If |1 Jump to |2 // IDS_IFJUMP

SetSubroutineBrief = SetSubroutine,SS
SetSubroutineShow = Set Subroutine |1  // IDS_SETSUBROUTINE

ReturnSubroutineBrief = ReturnSubroutine,RS
ReturnSubroutineShow =  Return from Subroutine  // IDS_RETURNSUBROUTINE

CallSubroutineBrief = CallSubroutine,CS
CallSubroutineShow =  Call Subroutine |1 // IDS_CALLSUBROUTINE

LabelBrief = Label,LA
LabelShow =   |1:  // IDS_LABEL

RunProgramBrief  = RunProgram,RU
RunProgramShow = Run Program |1 // IDS_RUNPROGRAM

;new lang
SnapBrief = Snap,SN
SnapShow = Snap 

FindObjectBrief = FindObject,FO
FindObjectShow = Find Object ("|1") -> |2

FindBlobsBrief = FindBlobs,FB
FindBlobsShow = Find Blobs ("|1") -> |2

SetPositionBrief = SetPosition,SP
SetPositionShow = Set Position |1 from Results Table (Row =|2, Z =|3)

RunFunctionBrief = ExternalFunction,EF
RunFunctionShow = External Function (Script = "|1", Function = "|2(|3)") -> |4

GetValueBrief = GetValue,GV
GetValueShow = Get Value (Row = |2 , Column = "|3") -> |1

ChangeTableBrief =ChangeTable,CT
ChangeTableShow = Change Table ( Row = |1 ,Column = "|2", Value = |3 )
;end new lang


[HomingDialog]
Caption = Robot Homing 
Ax1Txt = Axis 1      // IDT_AX1
Ax2Txt = Axis 2      // IDT_AX2
Ax3Txt = Axis 3      // IDT_AX3
Ax4Txt = Axis 4      // IDT_AX4
Ax5Txt = Axis 5      // IDT_AX5
Ax6Txt = Gripper     // IDT_AX6
RobTxt = Robot       //  IDT_RB
Ax7Txt = Axis 7      // IDT_AX7
Ax8Txt = Axis 8      // IDT_AX8
EmerTxt = To abort the homing procedure press the EMERGENCY button. // IDT_EMER
PerWaitTxt = Wait.\n Homing peripheral axes... // IDT_PER_WAIT
RobWaitTxt = Wait.\n Homing robot axes...     // IDT_ROB_WAIT
Hom = Homing...            // IDS_HOMING_
HomAx = Homing axis %d ...    // IDS_HOMING_AXIS
HomB = Homing B ( %d )     // IDS_HOMING_B
HomC = Homing C ( %d )     // IDS_HOMING_C

[TeachPosDialog]
Caption = Teach Positions (Simple)
CaptionExpand = Teach Positions (Expand)
PosNum = Position Number
Absolute = Absolute
Relative = Relative to:
IncludeAxes = Include Axes
Robot = Robot
Peripherals = Peripherals
Simple = &Simple
Expand = &Expand
Speed = Speed
Duration = Duration
ViaPos = Via Position
X = X(mm)
Y = Y(mm)
Z = Z(mm)
Pitch = Pitch (deg)
Roll =  Roll (deg)
GetPos = &Get Position
Clear =  &Clear       
Teach =  &Teach      

DurNoCirc = Duration not allowed for circular motion.

;new lang
CannotDisPos = The position coordinates for the peripherals cannot be displayed.
CannotTeachPer = Positions cannot be taught relative to peripheral positions.
;end new lang

InvalCoor = Invalid Encoder/Coordinate value: %s.

[ManualMoveDialog]
Caption = Manual Movement
Joint = &Joints
XYZ =  &XYZ
Speed = &Speed:
Image = Image

[RobotMoveDialog]
Caption = Robot Movement   // IDD_ROBOTMOVE
ManualPBtn = Manual       // IDC_RM_MANUALPUSHBUTTON
SpeedTxt = Speed           // IDT_RM_SPEED
OpenPBtn = Open           // IDC_RM_OPENPUSHBUTTON
ClosePBtn = Close         // IDC_RM_CLOSEPUSHBUTTON

[JawDialog]
Caption = JAW

;new lang1
Str1 = Jaw (mm):
Str2 = Range: 0...%d

;new lang1
Error = The jaw is undefined!

[SetAxisDialog]
Caption = Set Axis
;new lang1
Str1 = Set Axis:

Str2 = to Zero.
Error = The axis number is undefined.

[AddCamPosDialog]
;new lang
Caption = Add Camera Position
Str1 = Name:
Str2 = \n
Error = Do you want to overwrite the existing camera position?\n

[SaveAsParSetDialog]
Caption = Save Parameter Set As...
Str1 = Name:
Str2 = \n
Error = \n

[SetAnalogValue]
Caption = Analog Output
Str1 = Set Analog Output Value:
Str2 = Range: 0...255
Error = This value is not in the range.

[SetAnalogInputValue]
Caption = Analog Input
Str1 = Set Analog Input Value:
Str2 = Range: 0...255
Error = This value is not in the range.


[RenameDialog]
Caption = Rename
Str1 = Name:
Str2 = \n
Error = The name is undefined.

[GoToLine]
Caption = Go To Line ...
Str1 = Total number of lines: %d.
Str2 = \n
Error = \n
;end new lang

[PrintDialog]
Caption = Print
Screen  = &Screen
LogFile = &Log File
ScreenLog = Screen and Log &File
Text = Text:
PrintTo = Print to:
;new lang1
Error = The test string is undefined.

[StartConvDialog]
Caption = Start  Conveyor // IDD_STARTCONV
;new lang1
Axis = Axis:
SpeedTxt = Speed:     
DirectTxt = Direction:
PlusRBtn =  &Plus
MinusRBtn = &Minus
Error = The speed is undefined.

[StopConvDialog]
;new lang
Caption = Stop  Conveyor
Str1 = Axis:
Str2 = \n
Error = The axis is undefined.
;end new lang

[GoPosDialog]
Caption = Go to Position
Target = Target Position:
Via = Via Position:
Joint = &Joint
Linear = &Linear
Circular = &Circular
Spline = S&pline
Fast = &Fast
Speed = &Speed (1-9)
;new lang1
Duration = &Duration (1/10 sec)
ImpropSpeed = Incorrect 'Speed' value (1...9).
TargEqualVia = 'Target' and 'Via/From' positions cannot be identical.
;new lang
UndefFrom = The 'From' position is undefined.
UndefSpeed = The 'Speed' value is undefined (1...9).
UndefTime = The 'Time' value is undefined (1/10 sec).
;end new lang
ViaPos = Via Position
FromPos = From Position

[SetVarDialog]
Caption = Set Variable
Name = Name:
Comput = &Computation
Timer = &Timer (1/10 sec)
;new lang1
Sensor = &Gripper Sensor (mm)

Analog = &Analog Input
ValueOrExpres = Value  or  Expression
AnalogInpNum  = Analog  Input  Number
UndefNameVar = Undefined variable name.
;new lang1
UndefValVar = The value or expression are undefined.

[TurnOutDialog]
Caption = Turn Output
OutputNumber = Output Number:
Value = Value:
Digital = &Digital
Analog  = &Analog
On  =  &On
Off = O&ff
;new lang1
Range = Value Range: 0...255
InvalOutNum = Invalid output number: %ld.
;new lang1
UndefOutNum = The output  number is undefined. 
CaptionDigital = Turn Output
CaptionAnalog  = Set Analog Output

[DisEnabIntDialog]
Caption = Disable / Enable Interrupt
Disable = &Disable
Enable  = &Enable
InputNumber = Input Number:

[IfInputOnDialog]
Caption = If Input
InputNumber = Input Number:
On  = &On
Off = O&ff
;new lang
JumpToLabel = &Jump to Label:
CallSubroutine = Call &Subroutine:
;end new lang

[IfJumpDialog]
Caption = If <CONDITION> Jump to <LABEL>
IfRadio = &If...
IfStr   = If:
JumpRadio =  &Jump
JumpStr  =  Jump to:
;new lang1
Error = The condition is undefined.
CaptionIf = If <CONDITION> Jump to <LABEL>
CaptionJump = Jump to <LABEL>

[IfSwitchDialog]
Caption = If Limit Switch < # > ON Jump to < LABEL >
Switch = Limit Switch:
Jump =  Jump to:
;new lang1
Error = The limit switch number is undefined.

[LabelDialog]
Caption = Label
Str1 = Label:
Str2 = \n
Error = \n

[SetSubrDialog]
Caption = Set Subroutine
;new lang1
Str1 = Enter a name for the subroutine:
Str2 = \n
Error = \n

[CallSubrDialog]
Caption = Call Subroutine
Str1 = Name:
Str2 = \n
Error = \n

[WaitDialog]
Caption = Wait
Str1 = 1/10 of a second
Str2 = \n
;new lang1
Error = The wait time is undefined.

[RemarkDialog]
Caption = Remark
Str1 = Text:
Str2 = \n
Error = Undefined remark

[RecordPosDialog]
Caption = Record Position
Str1 = Record present position as position:
Str2 = \n
Error =

[ListPosit]
;new lang1
Coor = Coor.
XYZ = XYZ
Joint = Joint       
;new lang
Axis = Axis %d
Axis7 = Axis 7
Axis8 = Axis 8
Type  = Type  
X     = X (mm)
Y     = Y (mm)
Z     = Z (mm)
Pitch = Pitch (deg)
Roll  = Roll (deg)
mm_deg = mm/deg
Ax7mm_deg = Ax7 (mm/deg)
Ax8mm_deg = Ax8 (mm/deg)
AbsJoint = Abs. (Joint)
RelCurJoint = Rel. Cur. (Joint)
RelCurXYZ = Rel. Cur. (XYZ)
AbsXYZ = Abs. (XYZ)
RelJoint = Rel. %d (Joint)
RelXYZ = Rel. %d (XYZ)
;end new lang

[DownLoadDialog]
Caption = RoboCell Message                  // IDD_LOAD_SOFT
ConfigPBtn = &Configure Controller           // IDC_CONFIG_PUSHBUTTON
DownLoadPBtn = &Download Service Programs    // IDC_DOWNLOAD_PUSHBUTTON
OffLinePBtn = &Off-Line Mode              // IDC_OFFLINE_PUSHBUTTON

[FindDialog]
Caption = Find
;new lang
FindWhat = Fi&nd what:    // IDC_STATIC_FIND_WHAT
MatchCase = Match &case   // IDC_CHECK_CASE
;end new lang
Direction = Direction     // IDC_STATIC_DIRECT
Up =   &Up     // IDC_RADIO_UP
Down = &Down   // IDC_RADIO_DOWN
;new lang
FindNext =  &Find Next    // IDC_FIND_NEXT
CannotFind = Cannot find '%s'
FindIn     = Find in\s
;end new lang

[AboutDialog]
Caption = About RoboCell    // IDD_ABOUT
ScbsCaption = About SCORBASE

[WriteDialog]
Caption = Write  // IDD_WRITE_CMD
TextTxt   = Text:
ScaleTxt  = Scale:
;new lang1
UndefText = Text must be entered in the Text field.

[RunProgDialog]
Caption = Run Program  // IDD_RUNPROGRAM
NameTxt   = \sName

;From CellSim.XXX
[SendRobotOptionsDialog]
Caption=Send Robot Options

;new lang1
Default=&Default

Pitch=Pitch
Roll=Roll
ZOffset=Z-Offset
90Degrees=-90 Degrees
0Degrees=0 Degrees
Current=Current
UserDefined=User Defined:
ZOffsetAbovePoint=Z-Offset Above Point
Degrees=Degrees
mm=mm
;new lang
10mm=+10 mm
20mm=+20 mm
30mm=+30 mm
50mm=+50 mm
100mm=+100 mm
150mm=+150 mm


[UseParamSetDialog]
Caption=Use Parameter Set
ParamSet=Parameter set name:

[SetParamValueDialog]
Caption=Set Parameter Value
Axis=Axis:
Name=Name:
Value=Value:
Section = Section:\s
Key = Key:\s
Description = Description:\s

[SensorDataDialog]
Caption=Sensor - %s
ColorDetect=Color to Detect:
MaterialDetect=Material to Detect:
AllMaterials=All Materials
AllColors=All Colors
Glass=Glass
Metal=Metal
Plastic=Plastic
Wood=Wood
;end new lang

[WeldSettingDialog]
Caption=Welding Settings
VoltageTap=Voltage Tap

;new lang1
WireDiameter=Wire Diameter

WireSpeed=Wire Speed
ShieldingGas=Shielding Gas

;new lang
Voltage0=Fan only
Voltage1=1
Voltage2=2
Voltage3=3
Voltage4=4
Wire0=0.023 inch
Wire1=0.030 inch
Wire2=0.035 inch
Gas0=None
Gas1=CO2
Gas2=Argon+CO2
Gas3=Flux Core
;end new lang

[WeldCaracteristicDialog]
;new lang1
Caption=Analysis of Weld Segment #%d

Note=Note
WeldStatus=Status of the Weld
Components=Components
ShieldingGas=Shielding Gas:
VoltageSwitch=Voltage Tap:
WireDiameter=Wire Diameter (inch):
WireSpeed=Wire Speed Value:
GunSpeed=Gun Speed (mm/sec):

;new lang
Close=&Close
GoodWeld=Good Weld
LackShieldingGas=Porous and Burnt
SpatterWeld=Spatter Weld
DepositeWeld=Deposit Weld
Voltage0=Fan Only
Voltage1=1
Voltage2=2
Voltage3=3
Voltage4=4
;end new lang

None=None
CO2=CO2
ArgonCO2=Argon+CO2
FluxCore=Flux Core

;new lang1
ErrorData=Error Data

[ApplicationStrings]
OK = &OK
Cancel = &Cancel

;new lang
SaveBeforeEdit = Save the project before editing the 3D Model.
CtrlVersion = Controller Software Version %ld.
;end new lang

SyntErr = Syntax Error:  %s\n     // IDS_SYNTAXERROR
TitleMesScreen = Message Screen   // IDS_TITLEPRINTSCR
TitleLogFile  = Log File          // IDS_TITLELOGFILE
Plus = Plus     // IDS_PLUSTEXT
Minus = Minus   // IDS_MINUSTEXT
ImpropSpeed10 = Improper 'Speed' value ( 1...10 ).\n        // IDS_ILLEGALSPEED10
IllegSwitchNum = Illegal limit switch number: %s.     // IDS_ILLEGLIMITSWITCHNUMBER
InvalidJaw =  Invalid jaw value: %s ( mm )\n\nRange: 0...%d.     // IDS_INVALIDJAW

;new lang1
InvalidAnalog =  Invalid analog value: %s. Range: 0...255.     // IDS_INVALIDANALOG

UndefLabel = Undefined label.        // IDS_UNDEFINEDLABEL
UndefLabel1 = Undefined label: %s.   // IDS_UNDEFTHELABEL
UndefSubr  = Undefined subroutine name.    // IDS_UNDEFSUBRNAME
CmdNotFound = SCORBASE commands not found. \nHint:  correct  the  INI  file. // IDS_NOTFOUNDCOMMANDSHINT
UndefPoint = Undefined 'Target  position'.\n       // IDS_UNDEFINEDPOINT
UndefVia = Undefined 'Via  position'.\n            // IDS_UNDEFINEDTHROUGH
All = ALL                   // IDS_RESERVED_ALL
Any = ANY                   // IDS_RESERVED_ANY
UndefInp = Undefined input number.       // IDS_UNDEFINPUTNUMBER
InvalInp = Invalid input number %ld.    // IDS_INVALIDINPUTNUMBER
InvalOutp = Invalid output number %ld.    // IDS_INVALIDOUTPUTNUMBER

;new lang1
IncalcExpres = The expression cannot be calculated.   // IDS_INCALCULREZULT

UndefAnalVal = Undefined analog value.   // IDS_UNDEFANALOGVAL
InvalAnalVal = Invalid analog value: %s.   // IDS_INVALANALOGVAL
WaitTimeMore = Wait time more than %ld  seconds.   // IDS_WAITTIMEMORE
CoffErr =  \s\s\sControl is Off.     // IDS_CONTROLISOFFONLY
Untitled = ( Untitled )                // IDS_UNTITLED
InvalPageNum = Invalid page number %d.    // IDS_INVALIDPAGENUM
DelPos? = Delete position(s)?          // IDS_DELETEPOINT
UndefPos = Undefined position: %d \n.    // IDS_UNDEFPOINT
WantDelAll = Are you sure you want to delete all the positions ?    // IDS_YOUWANTDELETEALLPOINTS
Command = Command:\s                           // IDS_EXECUTION
Argument = SCORBASE command argument:        // IDS_ARGUMTEXT
Text = Text:                                 // IDS_TEXT

;new lang1
UndefText = Undefined  text  to  be found.       // IDS_UNDEFINEDTEXT

SearchNotFound = Search  %s  '%s'  not  found.\n   // IDS_NOTFOUND
Current = Current                                  // IDS_CURRENT
UndefPosNum = Undefined position number.     // IDS_UNDEFINEDPOINTNAME
PosNoDigit = Position number is not digital.\n  //  IDS_POINTNONDIGIT
InvalPosNum = Invalid position number.           // IDS_INVALIDPOINTNAME
InvalPosNum1 = Invalid position number %ld.     // 
MustRobPer = You must select 'Robot' and/or 'Periphirals'.  // IDS_UNDEFROBOTPERIPH
InvalOper = Invalid operation!                         // IDS_INVALID_OPER
UndefRelPos = Undefined 'Relative to' position number.  // IDS_UNDEFRELPOINTNAME
RecurDefPos = Recursive definition of\nposition:  %s.   // IDS_RECURSDEFINPOINT

;new lang1
InvalSelAx = Invalid axes selection.                  // IDS_INCORRECTAXESCHECK

WantDelPos = Are you sure you want to delete position # %d? // IDS_YOUWANTDELETEPOINT
ImpropDur = Improper duration value (1/10 sec.)             // IDS_ILLEGALTIME

;new lang1
CannotMove = Cannot execute the motion.  // IDS_CANNOTEXECMOTION

NoMemEdit =  Fatal error!  Not enough memory to execute this edit operation. You should abandon SBW. // IDS_NOTENOUGHMEMFOREDIT
PosChanged = Positions were changed.              // IDS_POSITIONWASCHANGED
ProgChanged = SCORBASE program was changed.    // IDS_SCBSPROGWASCHANGED
WantSave = Do you want to save ?               // IDS_DOYOUWANTTOSAVE
RobHomed = The robot has been homed.                    // IDS_ROBOT_HOMED
RobNotHomed = The robot has not been homed.             // IDS_ROBOT_NOT_HOMED
HomeSkiped = Search home has been skipped.                // IDS_SEARCH_HOME_SKIPPED
LoadProg = Load program              // IDS_LOAD_PRG_TITLE
LoadPos = Load positions             // IDS_LOAD_PNT_TITLE
LoadProgPos = Load program and positions    // IDS_LOAD_PRG_PNT_TITLE
SaveProg = Save program                     // IDS_SAVE_PRG_TITLE
SavePos = Save positions                    // IDS_SAVE_PNT_TITLE
SaveProgPos = Save program and positions    // IDS_SAVE_PRG_PNT_TITLE

;new lang1
SaveProj = Save changes to %s ?

SaveProgPosFilt = Level %s (*.%s)|*.%s|       // IDS_SAVE_PRG_PNT_FILTER
LoadProgPosFilt1 = Level 1 (*.sb1)|*.sb1|     // IDS_LOAD_PRG_PNT_FILTER_1
LoadProgPosFilt3 = Level 3 (*.sb3)|*.sb3|Level 1 (*.sb1)|*.sb1|      // IDS_LOAD_PRG_PNT_FILTER_3
LoadProgPosFilt  = Level %s (*.%s)|*.%s|Level 3 (*.sb3)|*.sb3|Level 1 (*.sb1)|*.sb1|All levels (*.sb*)|*.sb*| // IDS_LOAD_PRG_PNT_FILTER
LoadProgPosFiltACLC =   Level %s (*.%s)|*.%s       // IDS_LOAD_PRG_PNT_FILTER_ACLC
PosFilt = Positions (*.pnt)|*.pnt|           // IDS_PNT_FILTER
DelAllPos = Loading file: %s will delete all the positions currently in the ACL controller.\n\nLoad the new positions? // IDS_DELETE_ALL_POS
DelAllPos1 = File: %s\nDownloading positions to ACL controller will delete existing positions.\nContinue ?  // IDS_DELETE_ALL_POS1
OpenFileUse = Cannot open file.\n%s File in use.     // IDS_OPENFILEINUSE
SaveFileUse = Cannot save file.\n%s File in use.     // IDS_SAVEFILEINUSE
LinesRead = %d lines were read from  %s  file.        // IDS_LINESREADED
ReadErr = File read error.  // IDS_READERROR

;new lang
ER2About = RoboCell for SCORBOT-ER 2u
ScbsER2About = SCORBASE for SCORBOT-ER 2u
ER4About = RoboCell for SCORBOT-ER 4u
ScbsER4About = SCORBASE for SCORBOT-ER 4u
ER9About = RoboCell for SCORBOT-ER 9u
ScbsER9About = SCORBASE for SCORBOT-ER 9u
DemoInfo = This evaluation copy expires in %d days.  // IDS_DEMO_INFO
;end new lang

OffLine = Off-Line  // IDS_OFFLINETEXT
OnLine = On-Line     // IDS_ONLINETEXT
Simul = Simulation   // IDS_SIMULATION
Fail = Failure       // IDS_FAILURE
GoLineTitle = Go  To  Line ...          // IDS_GOTOLINETITLE
TotalLines = Total number of lines: %d.  //  IDS_TOTALLINES
ProgTerm = SCORBASE  program  terminated.    // IDS_PROGRAMTERMINATED
MisRetSubr = Missing  'Return from Subroutine' instruction.     // IDS_LACKOFRETSUBR
PosNoBelong = Positions in ACL controller from file: %s do not belong to active program: %s\nDo you want to download new positions for the program? // IDS_POSIT_NO_PERTAIN
InpForce = Input[s] %s in Force state.\n\nRun program anyway?   // IDS_INPUT_FORCE
PerSetup = &Peripheral Setup   // IDS_PERIPH_SETUP
GripSetup = &Gripper Setup     // IDS_GRIPPER_SETUP
DelPosACLC = Delete &Positions  // IDS_ACL_DEL_ALL
DelPerPos = Delete Per&ipheral Positions   // IDS_DEL_PERIPH
ACLCCom = &ACL Controller Communication    // IDS_ACLC_COMMUNIC
UplPos = &Upload Positions to PC        // IDS_UP_LOAD_POSIT
DownPos = &Download Positions from PC   // IDS_DOWN_LOAD_POSIT
ConfACLC = &Configure ACL controller    // IDS_ACL_CONFIG_CNTRL
SkipHome = &Skip Search Home            // IDS_SKIP_SEARCH_HOME
Contr = &Controller                     // IDS_CONTROLLER
EmergRec = EMERGENCY message received.   // IDS_ST_EMERGENCYRECEIVED
NoEmerg = EMERGENCY is inactive.       // IDS_EMERGENCYINACTIVE
Emerg = EMERGENCY                      

;new lang1
Emerg2 = Emergency button is pressed.

TracerNotFound =  File TRACER.EXE not found in current directory!  // IDS_TRACER_NOT_FOUND
CannotActTracer =  Cannot activate the Graphic Display application!    // IDS_CANNOT_ACTIVE_TRACER
CannotViewXYZ =  Robot has not been homed.\nCannot compute XYZ values!  // IDS_CANNNOT_XYZ
ACLCConfWarn = Configuration will erase all programs and positions from ACL controller battery backed-up RAM.\n\nDo you want to perform the configuration? // IDS_ACL_CONFIG_WARNING
WantDelPerPos = Are you sure you want to delete peripheral coordinates from positions? // IDS_YOUWANTDELETEPERPOINTS
WantUplPos = Do you want to upload positions from ACL controller? // IDS_WANT_UPLOAD_POSIT
MustStop = You must first stop the SCORBASE program!  // IDS_MUSTSTOP
File: = File:\s        // IDS_FILETEXT
ProgTitle = *** SCORBASE  PROGRAM ***    Name: %s    Date: %s    Page %d of %d //IDS_EDITPRINTTITLE
IllegCmd = Command not available.\s\s    // IDS_ILLEGALCMD
ErrLine = Unexpected error in line: %d.  // IDS_UNEXPECTERRORINLINE
CannotOpenFileWr = Cannot open file %s for writing.   // IDS_CANNOTOPENFILEFORWRITE
FileWrErr = Write error on file %s Line %d.  \n     // IDS_WRITEERRORONFILE
IllegForm = Illegal format. File:%s Line:%d.  \n   // IDS_ILLEGALFORMATANDLINE
CannotOpenFileRe = Cannot open file %s for reading.  // IDS_CANNOTOPENFILEFORREAD
IllegForm1 = Illegal format. File %s.                   // IDS_ILLEGALFORMAT
ProtViol = (%d ) Software license not found. Cannot start program. // IDS_PROTECTION_VIOLAT
PeriodExpir = Evaluation period has expired!            // IDS_EVAL_PERIOD
ExecLimit = Program execution limit has been reached!  // IDS_EXECUTION_LIMIT
CannotExecMot = Cannot execute linear motion for peripheral position: %d!\n // IDS_CANNOTPERIPH
InvalPosSpline = Invalid positions %d and %d\nfor 'Go Spline to Position' command\s // IDS_UNSUITPOINTS
NoJaw = SCORBASE is configured for pneumatic gripper.\nCannot execute ""Jaw"" or ""Set variable to sensor"" commands. // IDS_CANNOT_JAW
UndefVar1 = Undefined  variable: %s.\s\s           // IDS_UNDEFVAR1
UndefVar2 = Undefined variables: %s and %s.\s\s  // IDS_UNDEFVAR2

;new lang1
UndefNameVar = Undefined variable name.

Label = Label: %s.    // IDS_LABELTEXT
IllegSeq = Illegal sequence of operations.       // IDS_ILLEGSEQOPER
InvalTime = Invalid wait time: %ld (10ths of second).  // IDS_ILLEGALWAITTIME
UnexpErr = Unexpected error ( %s ). You must abandon SCORBASE and activate it again. // IDS_UNEXPECTEDERROR
FileWrErr = File: %s\nWrite error\s.      // IDS_FILEWRITEERROR
SCBSCon = SCORBASE is connected to %s controller.      // IDS_SCBSCONNECT
ShouldDownL = You changed position(s)during simulation/off-line operation.\nFile: %s\nDo you want to download the position(s) to the controller? // IDS_SHOULDDOWNLOADPOS
ConfDownL  = Configuration erased all positions from the controller battery backed-up RAM.\nFile: %s\nDo you want to download the position(s) to the controller? // IDS_CONFIGDOWNLOADPOS
InvalContrType = %s is an invalid controller type for robot %s!\nDo you want to work in simulation mode? // IDS_INV_CONTR_TYPE
InvalContrVer = Invalid controller version %s!\nFor robot %s the valid versions are %s or higher.\nDo you want to work in simulation mode? // IDS_INV_CONTR_VER
NoHomePer = Peripherals have not been homed.    // IDS_NOT_HOMED_PERIPH
IllegAxGroup = Incompatible axis groups.  // IDS_INCOMP_POSIT
ErrAxis  =  %s  Axis %d.        // IDS_AXIS_TEXT
ChangeComP = Cannot go on-line.\nChange COM port for ACL controller?  // IDS_SCBS_OFF_LINE
CoffWantCon = Control is off. Do you want to execute Control On? // IDS_CONTROLISOFF
PosNotLoad = Positions not loaded.\s     // IDS_POSITNOTLOADED
MotTerm = Motion was completed.  // IDS_MOTIONTERMIN
MotAbort = Motion  aborted.       // IDS_MOTIONABORTED
TPTeachM = Teach Pendant in Teach mode.   // IDS_TP_TEACHMODE
TPAutoM = Teach Pendant in  Auto mode.     // IDS_TP_AUTOMODE
TPTeach = TP Teach  // IDS_TP_TEACH
TPAuto = TP Auto    // IDS_TP_AUTO
InvalPosD = Invalid positions data. // IDS_INVALIDPOINTSDATA
QuitSCBS = %s.\n\nYou must abandon SCORBASE and activate it again.
FilePosErr = File: %s.\n%s.
PosRead = %d positions were read from '%s' file.   // IDS_POINTSREADED
PosRead1 = %d positions were read.   // IDS_POINTSREADED1
ManyInter = Too many non-processing input interrupts %d\s. // IDS_TOOMANYINPUTINTERRUPT
Next = NEXT  // IDS_RESERVED_NEXT
TPUpdRob = TP updated robot  position:  %d.    // IDS_TP_UPDATE_ROBOT
TPUpdPer = TP updated peripheral position:  %d.     // IDS_TP_UPDATE_PERIPH
SucFin = Successful  completion:\s\s     // IDS_SUCCESSFINISH
MultLab = Label %s is found in more than one program line.\s  // IDS_MULTIPLELABEL
TooManySubr = Too many nested subroutines %d.  // IDS_TOOBIGNESTEDSUBR
UndefSubr = Undefined subroutine name: %s.     // IDS_TOOBIGNESTEDSUBR
MultSubr = Set subroutine %s is found in more than one program line.// IDS_MULTIPLESUBRNAME

;new lang1
TitErrBox      = RoboCell Error     // IDS_TITLEOFERRMESBOX
TitErrBoxScbs  = SCORBASE error     // IDS_TITLEOFERRMESBOX
AplName =    RoboCell for ER 4u     // IDS_APPLICATIONNAME_PRO without Copyright
ScbsAplName =SCORBASE for ER 4u     // IDS_APPLICATIONNAME_PRO without Copyright
;end new lang

Con         =  Control On      // CM_CTRL_ON
Coff        =  Control Off     // CM_CTRL_OFF
OverWr      =  Overwrite       // IDS_OVERWRITE
Ins         =  Insert          // IDS_INSERT
IfInp = If Input
OnInp = On Input Interrupt

;new lang1
BegProg = \s\s\s\s*** Beginning of Program:  %s *** // IDS_PROGBEG

LineWr = %d lines were written in  %s  file. // IDS_LINESWRITTEN

;new lang
WrErr = Error writing to file.  // IDS_WRITEERROR
OverWrFile = %s\nThis file already exists.\n\nDo you want to replace it? // IDS_OVERWRITEPNT
;end new lang

AlwOnTop = &Always on top   // IDS_ALWAYS_ON_TOP

;new lang
SCBSproOpt = RoboCell is an optional add-on.\nContact your Eshed Robotec representative for details.
AplLock =  The controller has been locked by another application!
Wait = Please wait...
InitWait = Initializing, please wait...    // IDT_START_INIT 
Load3dWait = Please wait while 3D workcell loads...
LoadSetupWait = Please wait while CellSetup loads...
LoadProjWait = Please wait while the workspace loads...
WaitTime =  Wait  %d  (10ths of seconds)
;end new lang

Done = Done
ImpropAx = Improper axis number: %s. Use axis number: (%d...%d).

;new lang
UndefProg  = The program name is undefined.  
CannotWrText = Cannot write text: %s.
;end new lang

CannotExecMot1 = This motion is not available for peripheral position(s)
UsFilter = User Files (*.usr)|*.usr  // IDS_SAVEUSERSCREENFILTER

;new lang
SaveUsScr  = Save the current layout as the User Screen  // IDS_SAVEUSERSCREENTITLE
LoadUsScr  = Load the currently saved User Screen layout   // IDS_LOADUSERSCREENTITLE
WantChangePerip = Do you want to change the peripheral devices?
ErrChangePeriph = The peripheral device cannot be changed.
ViewFile = View File:\s

; Charts history
Charts = Charts  // Shimon2
HistoryNotOpen = History file could not be opened.\n
HistoryFileFull = History file is full.\n%s has stopped writing and saved the file.

; Parameter Set dialog
CaptionParSet = Parameter Set:\s\s
RobAx = Robot
Ax1Ax = Axis 1
Ax2Ax = Axis 2
Ax3Ax = Axis 3
Ax4Ax = Axis 4
Ax5Ax = Axis 5
Ax6Ax = Axis 6
Ax7Ax = Axis 7
Ax8Ax = Axis 8
RobotChange = Do you really want to change the robot?
NotConnect = Not Connected
SectionTxt = Section
KeyTxt     = Key
DescriptionTxt = Description
ValueTxt = Value
ShowTxt = Show
InvalName = Invalid parameter set name:\s
OverWriteParam = Do you want to overwrite the existing parameter set:/s
ErrAxisName = Error axis name:/s
ErrKeyName = Error key name:/s

DownLangLevel = Changing to this SCORBASE level will disable advanced level commands in this project.\nOK to continue?  // Shimon
SubWrite = Subprogram - Write:\s    // Shimon1  
HistoryFiles = History Files    // Shimon1
;end new lang